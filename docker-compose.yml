version: '3'
services:
  delugevpn:
    container_name: delugevpn
    image: binhex/arch-delugevpn
    cap_add: 
      - NET_ADMIN
    ports: 
      - '8112:8112'
      - '8118:8118'
      - '58846:58846'
      - '58946:58946'
    depends_on:
      - nginx
    volumes:
      - /media/hdd1/nedlastning:/downloads
      - /opt/appdata/delugevpn:/config
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - delugevpn.env
      - default.env
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - proxy

  nginx:
    container_name: nginx
    image: linuxserver/letsencrypt
    cap_add: 
      - NET_ADMIN
    ports:
      - '443:443'
      - '80:80'
    volumes:
     - /etc/localtime:/etc/localtime:ro
     - /opt/appdata/letsencrypt:/config
     - /opt/appdata/organizr:/database
    restart: always
    env_file:
      - nginx.env
      - default.env
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - proxy

  plex:
    container_name: plex
    image: plexinc/pms-docker
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /opt/appdata/plex/config:/config
      - /opt/appdata/plex/transcode:/transcode
      - /media:/data
    environment:
      - PLEX_CLAIM=claim-Xthgx81ZnQkN6fyb5wyM
      - ADVERTISE_IP=http://192.168.8.210:32400
    env_file:
      - default.env
    restart: always
    hostname: master
    ports:
      - '32400:32400/tcp'
      - '3005:3005/tcp'
      - '8324:8324/tcp'
      - '32469:32469/tcp'
      - '1900:1900/udp'
      - '32410:32410/udp'
      - '32412:32412/udp'
      - '32413:32413/udp'
      - '32414:32414/udp'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - proxy

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr
    depends_on:
      - delugevpn
    volumes:
      - /opt/appdata/sonarr:/config
      - /media/hdd2/serier:/tv
      - /media/hdd1/nedlastning:/downloads
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - default.env
    restart: unless-stopped
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - proxy

  radarr:
    container_name: radarr
    image: linuxserver/radarr
    depends_on:
      - delugevpn
    volumes:
      - /opt/appdata/radarr:/config
      - /media/hdd1/film:/movies
      - /media/hdd1/nedlastning:/downloads
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - default.env
    restart: unless-stopped
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - proxy
      
  jackett:
    container_name: jackett
    image: linuxserver/jackett
    network_mode: host
    env_file:
      - default.env
    volumes:
      - /opt/appdata/jackett:/config
      - /media/hdd1/nedlastning:/downloads
    restart: unless-stopped
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - proxy

  ombi:
    container_name: ombi
    image: linuxserver/ombi
    ports:
      - '3579:3579'
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /opt/appdata/ombi:/config
    environment:
      - HOME=/config
    env_file:
      - default.env
    restart: unless-stopped
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - proxy

  portainer:
    container_name: portainer
    image: portainer/portainer
    ports:
      - '9000:9000'
    environment:
      - HTTPS_PROXY=your_proxy_domain
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /opt/appdata/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart:
      always
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - proxy
      
  glances:
    image: docker.io/nicolargo/glances
    container_name: glances
    ports:
      - "61208-61209:61208-61209"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - GLANCES_OPT=-w
    pid: "host"
    restart:
      always
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - proxy
  
networks:
  proxy:
    external:
      name: proxy
